import sys
import hashlib
import re

def hashcompare(ssh_key):

    md5_key = "6c:68:a3:51:ed:f4:e4:1b:a5:25:1c:a6:6b:23:77:0f" 
    sha256_key = "qJpobHmxHk4a+qvc0v6dkhQwg7Y3wiZTWzyDtlNRvts"
    # Enter your md5 and sha256 hashes of your public ssh key above.

    md5_key = "".join(re.findall(r"[^:][\w]", md5_key)) # Ensures md5_key is in an easier to work with format.

    ssh_valid = re.search("ssh-rsa", ssh_key) 
    if(ssh_valid == None):
        print("Ensure you have entered a valid SSH public key")
        return # Validating that we actually have a public ssh key, so that the user does not accidentally input a private key.

    ssh_md5 = hashlib.md5(ssh_key.encode())
    ssh_sha256 = hashlib.sha256(ssh_key.encode()) # Encoding and hashing the string given to us by the user.

    if (ssh_md5.hexdigest() != md5_key or ssh_sha256.hexdigest() != sha256_key):
        print("Your SSH key does not match to the stored hash values.")
        return False
    elif (ssh_md5.hexdigest() == md5_key and ssh_sha256.hexdigest() == sha256_key):
        print("Your SSH key matches to the stored hash values.")
        return True 
        # Finally we check against both keys to ensure that they match both. If they do then it passes the test.

hashcompare("ssh-rsa AAAAB3NzaC1yc2EAAAADAQABAAABgQC/etQfj387UN6Y9fRwDoC3nPqZpqU7x7y5fdoHex7VRUu6rgL28hew1pQs7VBysyxFfiowb+dFDfGZw/uWdv58pg3OXuiA7UCWTWegQtnvtTES6w7kZBrUS60zsKPrVkDLkDCLkRYt3t5jGjHE672VuApkqgjGvf+iZ78BWxcGXeyuRmVpHfexTAHqbQtVQk4GTX+1SBxglBGqCST/mr8RYMlHuMrYuHN1GYlQ7wWuCRPzlqbFqUoPx4xE4X5Q77lhXq0vmHB3Q3lEPl0SzBkdbSZdH6YIb0+bglcVGXa0xEYR/GZPjlpEtnwClJVPey+ibHTVppPJveReCqPTyNvvCezUjiTUTBYJwILObnXX/6FKkZLsTIs+gUYsilxEvl3r8a/cXgpkks1dIbKY3A3Bm06TAMPAxsL0BEt+F1zlAX23BjtiASFdKzZz+FK20xBUi+SKb0YkxF+lP49TfpczuC55hDXD3YBqlc4896Ii5X+Z9kHYD/IDnD4ixg+Q2x8= ProgrammingTask")